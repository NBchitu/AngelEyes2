package com.google.analytics.containertag.common;

public enum Key
{
  private final String co;
  
  static
  {
    A = new Key("CAMPAIGN_SOURCE_KEY", 26, "campaign_source_key");
    B = new Key("CAMPAIGN_SOURCE_OVERRIDE", 27, "campaign_source_override");
    C = new Key("CAMPAIGN_TERM_KEY", 28, "campaign_term_key");
    D = new Key("CAMPAIGN_TERM_OVERRIDE", 29, "campaign_term_override");
    E = new Key("CAMPAIGN_TRACK", 30, "campaign_track");
    F = new Key("CATEGORY", 31, "category");
    G = new Key("CLICK_ID", 32, "click_id");
    H = new Key("CLIENT_INFO", 33, "client_info");
    I = new Key("COMPANY", 34, "company");
    J = new Key("COMPONENT", 35, "component");
    K = new Key("CONTENT_DESCRIPTION", 36, "content_description");
    L = new Key("CONTENT_GROUP", 37, "content_group");
    M = new Key("CONVERSION_ID", 38, "conversion_id");
    N = new Key("COOKIE_DOMAIN", 39, "cookie_domain");
    O = new Key("COOKIE_EXPIRATION", 40, "cookie_expiration");
    P = new Key("COOKIE_NAME", 41, "cookie_name");
    Q = new Key("COOKIE_PATH", 42, "cookie_path");
    R = new Key("COOKIE_PATH_COPY", 43, "cookie_path_copy");
    S = new Key("COUNTRY", 44, "country");
    T = new Key("CURRENCY_CODE", 45, "currency_code");
    U = new Key("CUSTOM_VARS", 46, "custom_vars");
    V = new Key("CUSTOMER_ID", 47, "customer_id");
    W = new Key("DATA_PROVIDER_ID", 48, "data_provider_id");
    X = new Key("DEBUG", 49, "debug");
    Y = new Key("DECORATE_FORM", 50, "decorate_form");
    Z = new Key("DECORATE_LINK", 51, "decorate_link");
    aa = new Key("DEFAULT_PAGES", 52, "default_pages");
    ab = new Key("DEFAULT_VALUE", 53, "default_value");
    ac = new Key("DETECT_FLASH", 54, "detect_flash");
    ad = new Key("DETECT_TITLE", 55, "detect_title");
    ae = new Key("DIMENSION", 56, "dimension");
    af = new Key("DOMAIN_NAME", 57, "domain_name");
    ag = new Key("DOUBLE_CLICK", 58, "double_click");
    ah = new Key("ELEMENT", 59, "element");
    ai = new Key("EMAIL", 60, "email");
    aj = new Key("EMPLOYEE_RANGE", 61, "employee_range");
    ak = new Key("ESCAPE", 62, "escape");
    al = new Key("EVENT_ACTION", 63, "event_action");
    am = new Key("EVENT_CATEGORY", 64, "event_category");
    an = new Key("EVENT_LABEL", 65, "event_label");
    ao = new Key("EVENT_VALUE", 66, "event_value");
    ap = new Key("EXCEPTION_DESCRIPTION", 67, "exception_description");
    aq = new Key("EXCEPTION_FATAL", 68, "exception_fatal");
    ar = new Key("FIELDS_TO_SET", 69, "fields_to_set");
    as = new Key("FORM_OBJECT", 70, "form_object");
    at = new Key("FUNCTION", 71, "function");
    au = new Key("FUNCTION_CALL_NAME", 72, "function_call_macro_name");
    av = new Key("GROUP", 73, "group");
    aw = new Key("HIT_CALLBACK", 74, "hit_callback");
    ax = new Key("HTML", 75, "html");
    ay = new Key("ID", 76, "id");
    az = new Key("IGNORED_ORGANIC", 77, "ignored_organic");
    aA = new Key("IGNORED_REF", 78, "ignored_ref");
    aB = new Key("IGNORE_CASE", 79, "ignore_case");
    aC = new Key("INPUT_FORMAT", 80, "input_format");
    aD = new Key("INSTANCE_NAME", 81, "instance_name");
    aE = new Key("INSTANCE_LABEL", 82, "instance_label");
    aF = new Key("ITEM_SEPARATOR", 83, "item_separator");
    aG = new Key("JAVASCRIPT", 84, "javascript");
    aH = new Key("KEYWORD", 85, "keyword");
    aI = new Key("KEY_VALUE_SEPARATOR", 86, "key_value_separator");
    aJ = new Key("LABEL", 87, "label");
    aK = new Key("LANGUAGE", 88, "language");
    aL = new Key("LINK", 89, "link");
    aM = new Key("LINK_BY_POST", 90, "link_by_post");
    aN = new Key("LINK_ID", 91, "link_id");
    aO = new Key("LIVE_ONLY", 92, "live_only");
    aP = new Key("LOCAL_GIF_PATH", 93, "local_gif_path");
    aQ = new Key("LOCATION", 94, "location");
    aR = new Key("METRIC", 95, "metric");
    aS = new Key("NAME", 96, "name");
    aT = new Key("NAMESPACE_CODE", 97, "namespace_code");
    aU = new Key("NAMESPACE_ID", 98, "namespace_id");
    aV = new Key("NAMESPACE_VALUE", 99, "namespace_value");
    aW = new Key("NONINTERACTION", 100, "noninteraction");
    aX = new Key("NOT_DEFAULT_MACRO", 101, "not_default_macro");
    aY = new Key("NO_PADDING", 102, "no_padding");
    aZ = new Key("NUMBER", 103, "number");
    ba = new Key("OPTOUT", 104, "optout");
    bb = new Key("ORDER", 105, "order");
    bc = new Key("ORDER_ID", 106, "order_id");
    bd = new Key("ORDER_VALUE", 107, "order_value");
    be = new Key("ORDINAL", 108, "ordinal");
    bf = new Key("ORGANIC", 109, "organic");
    bg = new Key("OUTPUT_FORMAT", 110, "output_format");
    bh = new Key("PAGE", 111, "page");
    bi = new Key("PAGE_PATH", 112, "page_path");
    bj = new Key("PARTITION", 113, "partition");
    bk = new Key("PIXEL", 114, "pixel");
    bl = new Key("PLATFORM", 115, "platform");
    bm = new Key("PRICES", 116, "prices");
    bn = new Key("PRODUCT", 117, "product");
    bo = new Key("PRODUCT_ID", 118, "product_id");
    bp = new Key("PRODUCT_IDS", 119, "product_ids");
    bq = new Key("QUANTITY", 120, "quantity");
    br = new Key("QUERY_KEY", 121, "query_key");
    bs = new Key("REFERRER", 122, "referrer");
    bt = new Key("REFERRER_OVERRIDE", 123, "referrer_override");
    bu = new Key("REVENUE", 124, "revenue");
    bv = new Key("SAMPLE_RATE", 125, "sample_rate");
    bw = new Key("SEND_HITS_TO_GOOGLE", 126, "send_hits_to_google");
    bx = new Key("SESSION_CONTROL", 127, "session_control");
    by = new Key("SESSION_COOKIE_TIMEOUT", 128, "session_cookie_timeout");
    bz = new Key("SITE_SPEED_SAMPLE_RATE", 129, "site_speed_sample_rate");
    bA = new Key("SOCIAL_ACTION", 130, "social_action");
    bB = new Key("SOCIAL_ACTION_TARGET", 131, "social_action_target");
    bC = new Key("SOCIAL_NETWORK", 132, "social_network");
    bD = new Key("SOCIAL_USE_DATA_LAYER", 133, "social_use_data_layer");
    bE = new Key("SERVER_SIDE", 134, "server_side");
    bF = new Key("STANDARD_INDUSTRIAL_CLASSIFICATION", 135, "standard_industrial_classification");
    bG = new Key("STRIP_WWW", 136, "strip_www");
    bH = new Key("TAG_ID", 137, "tag_id");
    bI = new Key("TARGET_URL", 138, "target_url");
    bJ = new Key("TIMING_CATEGORY", 139, "timing_category");
    bK = new Key("TIMING_LABEL", 140, "timing_label");
    bL = new Key("TIMING_SAMPLE_RATE", 141, "timing_sample_rate");
    bM = new Key("TIMING_VALUE", 142, "timing_value");
    bN = new Key("TIMING_VAR", 143, "timing_var");
    bO = new Key("TITLE", 144, "title");
    bP = new Key("TRACK_APPVIEW", 145, "track_appview");
    bQ = new Key("TRACK_EVENT", 146, "track_event");
    bR = new Key("TRACK_EXCEPTION", 147, "track_exception");
    bS = new Key("TRACK_SOCIAL", 148, "track_social");
    bT = new Key("TRACK_TIMING", 149, "track_timing");
    bU = new Key("TRACK_TRANSACTION", 150, "track_transaction");
    bV = new Key("TRACKER_NAME", 151, "tracker_name");
    bW = new Key("TRANSACTION_DATALAYER_MAP", 152, "transaction_datalayer_map");
    bX = new Key("TRANSACTION_ID", 153, "transaction_id");
    bY = new Key("TRANSACTION_ITEM_DATALAYER_MAP", 154, "transaction_item_datalayer_map");
    bZ = new Key("TRANSACTION_VARIABLE", 155, "transaction_variable");
    ca = new Key("TYPE", 156, "type");
    cb = new Key("UNREPEATABLE", 157, "unrepeatable");
    cc = new Key("URL", 158, "url");
    cd = new Key("USE_DATA_LAYER", 159, "use_data_layer");
    ce = new Key("USE_HASH", 160, "use_hash");
    cf = new Key("USE_IFRAME", 161, "use_iframe");
    cg = new Key("USE_IMAGE_TAG", 162, "use_image_tag");
    ch = new Key("USE_POSTSCRIBE", 163, "use_postscribe");
    ci = new Key("USER_ID", 164, "user_id");
    cj = new Key("USER_VARIABLE", 165, "user_variable");
    ck = new Key("VALUE", 166, "value");
    cl = new Key("VALUE_IN_DOLLARS", 167, "value_in_dollars");
    cm = new Key("VISITOR_COOKIE_TIMEOUT", 168, "visitor_cookie_timeout");
    cn = new Key("WIDGET_IDS", 169, "widget_ids");
    Key[] arrayOfKey = new Key['Âª'];
    arrayOfKey[0] = a;
    arrayOfKey[1] = b;
    arrayOfKey[2] = c;
    arrayOfKey[3] = d;
    arrayOfKey[4] = e;
    arrayOfKey[5] = f;
    arrayOfKey[6] = g;
    arrayOfKey[7] = h;
    arrayOfKey[8] = i;
    arrayOfKey[9] = j;
    arrayOfKey[10] = k;
    arrayOfKey[11] = l;
    arrayOfKey[12] = m;
    arrayOfKey[13] = n;
    arrayOfKey[14] = o;
    arrayOfKey[15] = p;
    arrayOfKey[16] = q;
    arrayOfKey[17] = r;
    arrayOfKey[18] = s;
    arrayOfKey[19] = t;
    arrayOfKey[20] = u;
    arrayOfKey[21] = v;
    arrayOfKey[22] = w;
    arrayOfKey[23] = x;
    arrayOfKey[24] = y;
    arrayOfKey[25] = z;
    arrayOfKey[26] = A;
    arrayOfKey[27] = B;
    arrayOfKey[28] = C;
    arrayOfKey[29] = D;
    arrayOfKey[30] = E;
    arrayOfKey[31] = F;
    arrayOfKey[32] = G;
    arrayOfKey[33] = H;
    arrayOfKey[34] = I;
    arrayOfKey[35] = J;
    arrayOfKey[36] = K;
    arrayOfKey[37] = L;
    arrayOfKey[38] = M;
    arrayOfKey[39] = N;
    arrayOfKey[40] = O;
    arrayOfKey[41] = P;
    arrayOfKey[42] = Q;
    arrayOfKey[43] = R;
    arrayOfKey[44] = S;
    arrayOfKey[45] = T;
    arrayOfKey[46] = U;
    arrayOfKey[47] = V;
    arrayOfKey[48] = W;
    arrayOfKey[49] = X;
    arrayOfKey[50] = Y;
    arrayOfKey[51] = Z;
    arrayOfKey[52] = aa;
    arrayOfKey[53] = ab;
    arrayOfKey[54] = ac;
    arrayOfKey[55] = ad;
    arrayOfKey[56] = ae;
    arrayOfKey[57] = af;
    arrayOfKey[58] = ag;
    arrayOfKey[59] = ah;
    arrayOfKey[60] = ai;
    arrayOfKey[61] = aj;
    arrayOfKey[62] = ak;
    arrayOfKey[63] = al;
    arrayOfKey[64] = am;
    arrayOfKey[65] = an;
    arrayOfKey[66] = ao;
    arrayOfKey[67] = ap;
    arrayOfKey[68] = aq;
    arrayOfKey[69] = ar;
    arrayOfKey[70] = as;
    arrayOfKey[71] = at;
    arrayOfKey[72] = au;
    arrayOfKey[73] = av;
    arrayOfKey[74] = aw;
    arrayOfKey[75] = ax;
    arrayOfKey[76] = ay;
    arrayOfKey[77] = az;
    arrayOfKey[78] = aA;
    arrayOfKey[79] = aB;
    arrayOfKey[80] = aC;
    arrayOfKey[81] = aD;
    arrayOfKey[82] = aE;
    arrayOfKey[83] = aF;
    arrayOfKey[84] = aG;
    arrayOfKey[85] = aH;
    arrayOfKey[86] = aI;
    arrayOfKey[87] = aJ;
    arrayOfKey[88] = aK;
    arrayOfKey[89] = aL;
    arrayOfKey[90] = aM;
    arrayOfKey[91] = aN;
    arrayOfKey[92] = aO;
    arrayOfKey[93] = aP;
    arrayOfKey[94] = aQ;
    arrayOfKey[95] = aR;
    arrayOfKey[96] = aS;
    arrayOfKey[97] = aT;
    arrayOfKey[98] = aU;
    arrayOfKey[99] = aV;
    arrayOfKey[100] = aW;
    arrayOfKey[101] = aX;
    arrayOfKey[102] = aY;
    arrayOfKey[103] = aZ;
    arrayOfKey[104] = ba;
    arrayOfKey[105] = bb;
    arrayOfKey[106] = bc;
    arrayOfKey[107] = bd;
    arrayOfKey[108] = be;
    arrayOfKey[109] = bf;
    arrayOfKey[110] = bg;
    arrayOfKey[111] = bh;
    arrayOfKey[112] = bi;
    arrayOfKey[113] = bj;
    arrayOfKey[114] = bk;
    arrayOfKey[115] = bl;
    arrayOfKey[116] = bm;
    arrayOfKey[117] = bn;
    arrayOfKey[118] = bo;
    arrayOfKey[119] = bp;
    arrayOfKey[120] = bq;
    arrayOfKey[121] = br;
    arrayOfKey[122] = bs;
    arrayOfKey[123] = bt;
    arrayOfKey[124] = bu;
    arrayOfKey[125] = bv;
    arrayOfKey[126] = bw;
    arrayOfKey[127] = bx;
    arrayOfKey['Â'] = by;
    arrayOfKey['Â'] = bz;
    arrayOfKey['Â'] = bA;
    arrayOfKey['Â'] = bB;
    arrayOfKey['Â'] = bC;
    arrayOfKey['Â'] = bD;
    arrayOfKey['Â'] = bE;
    arrayOfKey['Â'] = bF;
    arrayOfKey['Â'] = bG;
    arrayOfKey['Â'] = bH;
    arrayOfKey['Â'] = bI;
    arrayOfKey['Â'] = bJ;
    arrayOfKey['Â'] = bK;
    arrayOfKey['Â'] = bL;
    arrayOfKey['Â'] = bM;
    arrayOfKey['Â'] = bN;
    arrayOfKey['Â'] = bO;
    arrayOfKey['Â'] = bP;
    arrayOfKey['Â'] = bQ;
    arrayOfKey['Â'] = bR;
    arrayOfKey['Â'] = bS;
    arrayOfKey['Â'] = bT;
    arrayOfKey['Â'] = bU;
    arrayOfKey['Â'] = bV;
    arrayOfKey['Â'] = bW;
    arrayOfKey['Â'] = bX;
    arrayOfKey['Â'] = bY;
    arrayOfKey['Â'] = bZ;
    arrayOfKey['Â'] = ca;
    arrayOfKey['Â'] = cb;
    arrayOfKey['Â'] = cc;
    arrayOfKey['Â'] = cd;
    arrayOfKey['Â '] = ce;
    arrayOfKey['Â¡'] = cf;
    arrayOfKey['Â¢'] = cg;
    arrayOfKey['Â£'] = ch;
    arrayOfKey['Â¤'] = ci;
    arrayOfKey['Â¥'] = cj;
    arrayOfKey['Â¦'] = ck;
    arrayOfKey['Â§'] = cl;
    arrayOfKey['Â¨'] = cm;
    arrayOfKey['Â©'] = cn;
    cp = arrayOfKey;
  }
  
  private Key(String paramString)
  {
    this.co = paramString;
  }
  
  public String toString()
  {
    return this.co;
  }
}


/* Location:           C:\DISKD\fishfinder\apktool-install-windows-r05-ibot\classes_dex2jar.jar
 * Qualified Name:     com.google.analytics.containertag.common.Key
 * JD-Core Version:    0.7.0.1
 */